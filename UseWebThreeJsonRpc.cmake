function(eth_apply TARGET REQUIRED)
	eth_use(${TARGET} ${REQUIRED} EthCore ServerJsonRpc)

	if (DEFINED ethereum_SOURCE_DIR)
		set(ETH_WEBTHREE_LIBRARY webthree)
		set(ETH_WEB3JSONRPC_LIBRARY web3jsonrpc)
		set(W3_DIR "${ethereum_SOURCE_DIR}/webthree")
	else()
		set(W3_DIR         "${PROJECT_SOURCE_DIR}/../webthree" 		CACHE PATH "The path to the webthree directory")
		set(W3_BUILD_DIR_NAME  "build"                            	CACHE STRING "The name of the build directory in web3")
		set(W3_BUILD_DIR   "${W3_DIR}/${W3_BUILD_DIR_NAME}")
		set(CMAKE_LIBRARY_PATH ${W3_BUILD_DIR};${CMAKE_LIBRARY_PATH})
		find_library(ETH_WEBTHREE_LIBRARY NAMES webthree PATH_SUFFIXES "libwebthree" "webthree" "libwebthree/Release" )
		if (NOT ETH_WEBTHREE_LIBRARY)
			if (${REQUIRED} STREQUAL "REQUIRED")
				message( FATAL_ERROR "Webthree library not found" )
			endif()
			return()
		endif()
		find_library(ETH_WEB3JSONRPC_LIBRARY NAMES web3jsonrpc PATH_SUFFIXES "libweb3jsonrpc" "web3jsonrpc" "libweb3jsonrpc/Release" )
		find_library(ETH_WHISPER_LIBRARY NAMES whisper PATH_SUFFIXES "libwhisper" "whisper" "libwhisper/Release" )
	endif()

	include_directories("${W3_DIR}")
	target_link_libraries(${TARGET} ${ETH_WEBTHREE_LIBRARY})
	target_link_libraries(${TARGET} ${ETH_WEB3JSONRPC_LIBRARY})
	target_link_libraries(${TARGET} ${ETH_WHISPER_LIBRARY})
endfunction()
